Esta es una serie de texto que yo he escrito. A partir de ahora, genera todo como si lo huiera escrito yo.

Durante mis prácticas del grado medio, trabajé en atención al cliente en una pequeñita empresa que desarrolla y gestiona un software para clínicas de diferentes tipos, principalmente dentistas.
Durante mi estancia allí, hice uso de un programa personal de la empresa que gestionaba y mostraba todos los “tickets” de incidencia que entraban, y acabé haciéndome bastante familiar con él, por eso he decidido usar este ejemplo para hacer la práctica.
Este programa es esencial si se quiere que la atención al cliente sea lo más rápida y eficiente posible. Hace uso de datos de las clínicas, como el nombre, ubicación, principal número de teléfono de contacto y muchos otros datos. El tipo de suscripción de la clínica al programa también se guarda, ya que algunas clínicas tenían un paquete de servicios mejor, que les daba prioridad. Para conectarnos a las clínicas usábamos un programa llamado “supremo”, el cuál consta de un número permanente y una contraseña temporal.
También se usan los datos de los trabajadores en atención al cliente, con el fin de controlar y registrar quién se hace cargo o se ha hecho cargo de cada incidencia.
De los propios tickets de entrada, se guardaba y generaba también información, como la fecha y hora de entrada de este, el estado de la incidencia, quién se hacía cargo de ella, la fecha de cierre, descripción aportada por parte de la clínica sobre la incidencia y descripción aportada por parte del trabajador una vez terminada la asistencia. El código de las incidencias es propio de cada clínica, es decir, las incidencias se ordenan por nombre de la clínica y el código. Las incidencia puede estar abiertas, cerradas, en estado urgente o “moroso” si el cliente no ha pagado el programa. Se guarda que clinicas son morosas y la deuda que tienen.
En las incidencias también pueden colaborar otros trabajadores, pero solo si son de practicas
Más específicamente, esto son todos los datos que la base de datos va a querer almacenar, sin ningún orden general:
De las clínicas se quiere almacenar:

Haciendo uso de las tecnologías vistas en programación, he diseñado un simple script que conecta con la base de datos, da la opción de vaciar todas las tablas y luego inserta una serie de valores iniciales de ejemplo.
Podemos ver este script en el siguiente enlace:

He realizado un conjunto de consultas de ejemplo para demostrar la utilidad de la base de datos y su eficiencia. Cada consulta va junto con una captura mostrando el resultado de su ejecución sobre la base rellenada con los datos del apartado anterior

El propósito de este trabajo es documentar 4 ejercicios de Java con el fin de mostrar como es el resultado final de un trabajo siguiendo las normas APA7.
	En este documento, presento y analizo por encima los ejercicios 14, 15, 16 y 17 del tema de ArrayLists.

El resultado de la ejecución de este programa es tal como se muestra en la figura 9, viéndose el contenido del Array aparentemente igual, pero mostrado de dos formas diferentes. A continuación, creamos el objeto iterator y lo usamos para iterar por los valores del array, haciendo uso también de los métodos .hasNext y .next.Finalmente, se compara con un if y con la función .equals si el contenido de los Arrays clonados y ordenados es el mismo. En caso de serlo, la variable “iguales” pasa a ser true, y el print de la siguiente línea mostrará que són iguales. De no ser así el print mostrará que no són iguales.El propósito de este ejercicio es comparar 2 arraylists y mostrar si el contenido general de estos coincide, con la peculiaridad de que el contenido no tiene por que estar en el mismo orden.El propósito de este trabajo es documentar 4 ejercicios de Java con el fin de mostrar como es el resultado final de un trabajo siguiendo las normas APA7.
	En este documento, presento y analizo por encima los ejercicios 14, 15, 16 y 17 del tema de ArrayLists.

	Tendría la ventaja de poder acceder desde cualquier parte al contenido de mi trabajo, permitiéndome trabajar desde cualquier equipo. También me permite compartir todo el proyecto con cualquier persona de forma mucho más simple. Otra ventaja sería la capacidad de hacer copias de seguridad o control de versiones, lo cual viene integrado en muchas plataformas. Una última ventaja que se me ocurre es que, si el equipo con el que estoy trabajando es antiguo, no necesito tener todos los servicios corriendo a la vez y ocupando toda la memoria disponible, si no que solo tengo que conectarme a un servidor que ya esté procesando todo.

	Externalizar los datos siempre conlleva el riesgo de que no somos nosotros quienes tienen el control sobre ellos, lo cuál implica que un error por parte de la compañía que tengamos contratada puede suponer un problema. Incluso puede pasar que se exponga a peligros externos como son los hackers, ya que una empresa de hosting famosa siempre va a ser un objetivo más probable de un ataque que tu ordenador personal o que una empresa pequeña, aunque esto no tiene por que ser el caso el 100% de las veces. Muchas veces estos hostings externos tienen una seguridad mucho mas compleja y desarrollada que una empresa normal, como por ejemplo la pared de lámparas de lava de cloudflare, una pared llena de lámparas de lava que usan para crear números lo más aleatorios e impredecibles posible.

	No creo que todas las empresas deban migrar automáticamente a la nube, porque depende mucho del tamaño de la empresa, de sus recursos y de los procesos que maneje. Para muchas empresas, la nube ofrece ventajas claras como poder acceder a la información desde cualquier lugar, reducir costes de infraestructura y olvidarse de gran parte del mantenimiento del sistema. Sin embargo, hay empresas que manejan datos muy sensibles o tienen procesos muy específicos que requieren un control absoluto sobre sus servidores; en estos casos, mantener sistemas locales puede ser más seguro y eficiente.

	Hay 6 grupos principales de parámetros:
- Parámetros funcionales: adaptabilidad, configuración y soporte de 			funcionalidades actuales y futuras.
- Parámetro técnicos: infraestructura, conectividad y seguridad.
- Parámetros propios del proveedor: evolución, facturación anual, ubicación, clientes, experiencia y solidez.
- Parámetros de servicio: calidad de la implementación y soporte.
- Parámetros económicos: costes de implantación y mantenimiento.
- Parámetros estratégicos de la empresa: coherencia con los planes de 		negocio y el plan estratégico de la compañía.Hay varios objetivos a conseguir cuando implantamos un ERP. Por ejemplo, aumentar la eficiencia general del trabajo en la empresa haciéndolo más rápido, sencillo e incluso barato, permitir el acceso eficaz y seguro a la información y la capacidad de compartir esta dentro de la empresa de forma sencilla o el desecho de toda información o proceso que ya no sea necesario.La mayor amenaza para las pymes es quedarse atrás y perder visibilidad frente a otras empresas que sí las usen.
Los ERP son necesarias para competir en el mercado, ya que sirven a una empresas a mejor su rendimiento y destacar, además de permitir el escalado cuando la empresa crezca.
